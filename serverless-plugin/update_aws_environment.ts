// Update the list of libraries included in the AWS Lambda environment

import { spawnSync } from 'child_process';
import { writeFileSync } from 'fs-extra';
import * as path from 'path';

import * as config from './config';
import * as ld from './ld';
import * as version from './version';

const EXPORT_FILE_NAME = path.resolve(__dirname, 'aws_environment.ts');

function commandOutput(cmd: string, args: string[]): string {
    const result = spawnSync(
        'docker',
        [
            'run',
            '--rm',
            '--entrypoint', cmd,
            config.DOCKER_IMAGE,
            ...args,
        ]
    );

    if (result.error || result.status && result.status > 0) {
        console.log("Error calling " + cmd + " in the AWS image.");
        console.log(result.stderr.toString().trim());
        throw "Error calling " + cmd;
    }

    return result.stdout.toString().trim();
}

function getLibraries(): string[] {
    const lddOutput = commandOutput('/usr/sbin/ldconfig', [
        '-c', 'new',
        '-p'
    ]);

    const libraries = Object.keys(ld.parseLdOutput(lddOutput));

    return libraries;
};

function getGlibcVersion(): version.Version {
    const lddOutput = commandOutput('/usr/bin/ldd', ['--version']);

    const glibcVersionMatch = lddOutput.match(/((\d+.)+\d+)/);
    if (!glibcVersionMatch) {
        console.log("Unexpected output from ldd.")
        console.log(lddOutput);
        throw "Unexpected output from ldd.";
    }
    const glibcVersion = version.parse(glibcVersionMatch[0]);
    return glibcVersion;
}

function main(): void {
    let content = "// This file is autogenerated.\n" +
        "// Please use 'npm run update-aws-environment' to update.\n";

    function add_export(name: string, value: any): string {
        return "export const " + name + " = " +
            JSON.stringify(value, null, 4) + ";\n";
    }

    content += add_export("libraries", getLibraries());
    content += add_export("glibcVersion", getGlibcVersion());

    writeFileSync(EXPORT_FILE_NAME, content);
}

main();
